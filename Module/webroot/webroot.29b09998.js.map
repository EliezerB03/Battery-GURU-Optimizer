{"mappings":"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","sources":["<anon>","scripts/core/dialogs.js"],"sourcesContent":["// Dialog Window Behavior\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const mask = document.querySelector('.oui-dialog-mask');\n    let activeDialog = null;\n    let isAnimating = false;\n    const preventTouch = (e)=>e.preventDefault();\n    let startY = 0;\n    function blockInteractions() {\n        isAnimating = true;\n        document.body.style.pointerEvents = 'none';\n        document.body.style.userSelect = 'none';\n        document.body.style.overflow = 'hidden';\n        document.documentElement.style.pointerEvents = 'none';\n        document.documentElement.style.userSelect = 'none';\n        const dialogButtons = document.querySelectorAll('.oui-dialog-action-button, .close-dialog-btn, .reset-dialog-btn');\n        dialogButtons.forEach((button)=>{\n            button.style.pointerEvents = 'none';\n        });\n    }\n    function unblockInteractions() {\n        isAnimating = false;\n        document.body.style.pointerEvents = '';\n        document.body.style.userSelect = '';\n        document.body.style.overflow = '';\n        document.documentElement.style.pointerEvents = '';\n        document.documentElement.style.userSelect = '';\n        const dialogButtons = document.querySelectorAll('.oui-dialog-action-button, .close-dialog-btn, .reset-dialog-btn');\n        dialogButtons.forEach((button)=>{\n            button.style.pointerEvents = '';\n        });\n    }\n    const onDialogTouchStart = (e)=>{\n        startY = e.touches[0].clientY;\n    };\n    const onDialogTouchMove = (e)=>{\n        if (!activeDialog) return;\n        const dialog = activeDialog;\n        const scrollTop = dialog.scrollTop;\n        const scrollHeight = dialog.scrollHeight;\n        const offsetHeight = dialog.offsetHeight;\n        const currentY = e.touches[0].clientY;\n        const isScrollingDown = currentY > startY;\n        const isScrollingUp = currentY < startY;\n        if (scrollTop === 0 && isScrollingDown || scrollTop + offsetHeight >= scrollHeight && isScrollingUp) e.preventDefault();\n        startY = currentY;\n    };\n    const openDialog = (dialog)=>{\n        blockInteractions();\n        dialog.classList.add('show');\n        mask.classList.add('show');\n        activeDialog = dialog;\n        document.body.classList.add('no-scroll');\n        document.addEventListener('touchmove', preventTouch, {\n            passive: false\n        });\n        dialog.addEventListener('touchstart', onDialogTouchStart, {\n            passive: false\n        });\n        dialog.addEventListener('touchmove', onDialogTouchMove, {\n            passive: false\n        });\n        setTimeout(()=>{\n            unblockInteractions();\n        }, 275);\n    };\n    const closeDialog = ()=>{\n        if (!activeDialog) return;\n        blockInteractions();\n        activeDialog.classList.remove('show');\n        activeDialog.classList.add('hide');\n        mask.classList.remove('show');\n        document.body.classList.remove('no-scroll');\n        document.removeEventListener('touchmove', preventTouch);\n        activeDialog.removeEventListener('touchstart', onDialogTouchStart);\n        activeDialog.removeEventListener('touchmove', onDialogTouchMove);\n        const handleTransitionEnd = (event)=>{\n            if (event.target === activeDialog && activeDialog.classList.contains('hide')) {\n                activeDialog.removeEventListener('transitionend', handleTransitionEnd);\n                setTimeout(()=>{\n                    activeDialog.classList.remove('hide');\n                    activeDialog = null;\n                    unblockInteractions();\n                }, 5);\n            }\n        };\n        activeDialog.addEventListener('transitionend', handleTransitionEnd);\n    };\n    document.querySelectorAll('[data-dialog-target]').forEach((button)=>{\n        button.addEventListener('click', (e)=>{\n            if (isAnimating) {\n                e.preventDefault();\n                e.stopPropagation();\n                return false;\n            }\n            const targetId = button.getAttribute('data-dialog-target');\n            const dialog = document.getElementById(targetId);\n            if (dialog) openDialog(dialog);\n        });\n    });\n    document.querySelectorAll('.close-dialog-btn').forEach((closeBtn)=>{\n        closeBtn.addEventListener('click', (e)=>{\n            if (isAnimating) {\n                e.preventDefault();\n                e.stopPropagation();\n                return false;\n            }\n            closeDialog();\n        });\n    });\n    mask.addEventListener('click', (e)=>{\n        const closingAppDialog = document.getElementById('closing_app_dialog');\n        if (isAnimating) {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n        if (closingAppDialog && closingAppDialog.classList.contains('show')) {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        } else closeDialog();\n    });\n});\n// Dialog Glow Effect Behavior\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    const dialogGlowMap = new WeakMap();\n    const ensureDialogGlows = (dialog)=>{\n        if (!dialog) return null;\n        if (dialogGlowMap.has(dialog)) return dialogGlowMap.get(dialog);\n        const desc = dialog.querySelector('.oui-dialog-description');\n        if (!desc) return null;\n        let topGlow = dialog.querySelector('.dialog-top-glow');\n        let bottomGlow = dialog.querySelector('.dialog-bottom-glow');\n        if (!topGlow) {\n            topGlow = document.createElement('div');\n            topGlow.className = 'dialog-top-glow';\n            dialog.appendChild(topGlow);\n        }\n        if (!bottomGlow) {\n            bottomGlow = document.createElement('div');\n            bottomGlow.className = 'dialog-bottom-glow';\n            dialog.appendChild(bottomGlow);\n        }\n        topGlow.style.opacity = topGlow.style.opacity || '0';\n        bottomGlow.style.opacity = bottomGlow.style.opacity || '0';\n        const item = {\n            desc,\n            topGlow,\n            bottomGlow\n        };\n        dialogGlowMap.set(dialog, item);\n        return item;\n    };\n    const isScrollable = (el)=>el && el.scrollHeight > el.clientHeight + 1;\n    const findScrollableForDialog = (dialog)=>{\n        if (!dialog) return null;\n        const desc = dialog.querySelector('.oui-dialog-description');\n        if (desc) return desc;\n        return dialog;\n    };\n    const setGlowForDialog = (dialog, on)=>{\n        const g = dialogGlowMap.get(dialog) || ensureDialogGlows(dialog);\n        if (!g) return;\n        g.topGlow.style.opacity = on ? '1' : '0';\n        g.bottomGlow.style.opacity = on ? '1' : '0';\n    };\n    const updateGlow = ()=>{\n        requestAnimationFrame(()=>{\n            const active = document.querySelector('.oui-dialog.show');\n            if (!active) return setGlowForDialog(active, false);\n            const scrollable = findScrollableForDialog(active);\n            setGlowForDialog(active, Boolean(scrollable && isScrollable(scrollable)));\n        });\n    };\n    updateGlow();\n    const mo = new MutationObserver(updateGlow);\n    document.querySelectorAll('.oui-dialog').forEach((d)=>mo.observe(d, {\n            attributes: true,\n            attributeFilter: [\n                'class'\n            ]\n        }));\n    if ('ResizeObserver' in window) {\n        const ro = new ResizeObserver(updateGlow);\n        ro.observe(document.documentElement);\n        document.querySelectorAll('.oui-dialog, .oui-dialog-description').forEach((el)=>ro.observe(el));\n    }\n    const domMo = new MutationObserver(updateGlow);\n    document.querySelectorAll('.oui-dialog .oui-dialog-description').forEach((sc)=>domMo.observe(sc, {\n            childList: true,\n            subtree: true\n        }));\n    window.addEventListener('resize', updateGlow);\n});\n\n//# sourceMappingURL=webroot.29b09998.js.map\n","// Dialog Window Behavior\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const mask = document.querySelector('.oui-dialog-mask');\r\n  let activeDialog = null;\r\n  let isAnimating = false; \r\n  const preventTouch = (e) => e.preventDefault();\r\n  let startY = 0;\r\n  function blockInteractions() {\r\n    isAnimating = true;\r\n    document.body.style.pointerEvents = 'none';\r\n    document.body.style.userSelect = 'none';\r\n    document.body.style.overflow = 'hidden';\r\n    document.documentElement.style.pointerEvents = 'none';\r\n    document.documentElement.style.userSelect = 'none';\r\n    const dialogButtons = document.querySelectorAll('.oui-dialog-action-button, .close-dialog-btn, .reset-dialog-btn');\r\n    dialogButtons.forEach(button => {\r\n      button.style.pointerEvents = 'none';\r\n    });\r\n  }\r\n  function unblockInteractions() {\r\n    isAnimating = false;\r\n    document.body.style.pointerEvents = '';\r\n    document.body.style.userSelect = '';\r\n    document.body.style.overflow = '';\r\n    document.documentElement.style.pointerEvents = '';\r\n    document.documentElement.style.userSelect = '';\r\n    const dialogButtons = document.querySelectorAll('.oui-dialog-action-button, .close-dialog-btn, .reset-dialog-btn');\r\n    dialogButtons.forEach(button => {\r\n      button.style.pointerEvents = '';\r\n    });\r\n  }\r\n  const onDialogTouchStart = (e) => {\r\n    startY = e.touches[0].clientY;\r\n  };\r\n  const onDialogTouchMove = (e) => {\r\n    if (!activeDialog) return;\r\n    const dialog = activeDialog;\r\n    const scrollTop = dialog.scrollTop;\r\n    const scrollHeight = dialog.scrollHeight;\r\n    const offsetHeight = dialog.offsetHeight;\r\n    const currentY = e.touches[0].clientY;\r\n    const isScrollingDown = currentY > startY;\r\n    const isScrollingUp = currentY < startY;\r\n    if (\r\n      (scrollTop === 0 && isScrollingDown) ||\r\n      (scrollTop + offsetHeight >= scrollHeight && isScrollingUp)\r\n    ) {\r\n      e.preventDefault();\r\n    }\r\n    startY = currentY;\r\n  };\r\n  const openDialog = (dialog) => {\r\n    blockInteractions();\r\n    dialog.classList.add('show');\r\n    mask.classList.add('show');\r\n    activeDialog = dialog;\r\n    document.body.classList.add('no-scroll');\r\n    document.addEventListener('touchmove', preventTouch, { passive: false });\r\n    dialog.addEventListener('touchstart', onDialogTouchStart, { passive: false });\r\n    dialog.addEventListener('touchmove', onDialogTouchMove, { passive: false });\r\n    setTimeout(() => {\r\n      unblockInteractions();\r\n    }, 275); \r\n  };\r\n  const closeDialog = () => {\r\n    if (!activeDialog) return;\r\n    blockInteractions();\r\n    activeDialog.classList.remove('show');\r\n    activeDialog.classList.add('hide');\r\n    mask.classList.remove('show');\r\n    document.body.classList.remove('no-scroll');\r\n    document.removeEventListener('touchmove', preventTouch);\r\n    activeDialog.removeEventListener('touchstart', onDialogTouchStart);\r\n    activeDialog.removeEventListener('touchmove', onDialogTouchMove);\r\n    const handleTransitionEnd = (event) => {\r\n      if (event.target === activeDialog && activeDialog.classList.contains('hide')) {\r\n        activeDialog.removeEventListener('transitionend', handleTransitionEnd);\r\n        setTimeout(() => {\r\n          activeDialog.classList.remove('hide');\r\n          activeDialog = null;\r\n          unblockInteractions();\r\n        }, 5);\r\n      }\r\n    };\r\n    activeDialog.addEventListener('transitionend', handleTransitionEnd);\r\n  };\r\n  document.querySelectorAll('[data-dialog-target]').forEach(button => {\r\n    button.addEventListener('click', (e) => {\r\n      if (isAnimating) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return false;\r\n      }\r\n      const targetId = button.getAttribute('data-dialog-target');\r\n      const dialog = document.getElementById(targetId);\r\n      if (dialog) openDialog(dialog);\r\n    });\r\n  });\r\n  document.querySelectorAll('.close-dialog-btn').forEach(closeBtn => {\r\n    closeBtn.addEventListener('click', (e) => {\r\n      if (isAnimating) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return false;\r\n      }\r\n      closeDialog();\r\n    });\r\n  });\r\n  mask.addEventListener('click', (e) => {\r\n    const closingAppDialog = document.getElementById('closing_app_dialog');\r\n    if (isAnimating) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      return false;\r\n    }\r\n    if (closingAppDialog && closingAppDialog.classList.contains('show')) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      return false;\r\n    }\r\n    else {closeDialog();}\r\n  });\r\n});\r\n// Dialog Glow Effect Behavior\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const dialogGlowMap = new WeakMap();\r\n  const ensureDialogGlows = (dialog) => {\r\n    if (!dialog) return null;\r\n    if (dialogGlowMap.has(dialog)) return dialogGlowMap.get(dialog);\r\n    const desc = dialog.querySelector('.oui-dialog-description');\r\n    if (!desc) return null;\r\n    let topGlow = dialog.querySelector('.dialog-top-glow');\r\n    let bottomGlow = dialog.querySelector('.dialog-bottom-glow');\r\n    if (!topGlow) {\r\n      topGlow = document.createElement('div');\r\n      topGlow.className = 'dialog-top-glow';\r\n      dialog.appendChild(topGlow); \r\n    }\r\n    if (!bottomGlow) {\r\n      bottomGlow = document.createElement('div');\r\n      bottomGlow.className = 'dialog-bottom-glow';\r\n      dialog.appendChild(bottomGlow);\r\n    }\r\n    topGlow.style.opacity = topGlow.style.opacity || '0';\r\n    bottomGlow.style.opacity = bottomGlow.style.opacity || '0';\r\n    const item = { desc, topGlow, bottomGlow };\r\n    dialogGlowMap.set(dialog, item);\r\n    return item;\r\n  };\r\n  const isScrollable = (el) => el && (el.scrollHeight > el.clientHeight + 1);\r\n  const findScrollableForDialog = (dialog) => {\r\n    if (!dialog) return null;\r\n    const desc = dialog.querySelector('.oui-dialog-description');\r\n    if (desc) return desc;\r\n    return dialog;\r\n  };\r\n  const setGlowForDialog = (dialog, on) => {\r\n    const g = dialogGlowMap.get(dialog) || ensureDialogGlows(dialog);\r\n    if (!g) return;\r\n    g.topGlow.style.opacity = on ? '1' : '0';\r\n    g.bottomGlow.style.opacity = on ? '1' : '0';\r\n  };\r\n  const updateGlow = () => {\r\n    requestAnimationFrame(() => {\r\n      const active = document.querySelector('.oui-dialog.show');\r\n      if (!active) return setGlowForDialog(active, false);\r\n      const scrollable = findScrollableForDialog(active);\r\n      setGlowForDialog(active, Boolean(scrollable && isScrollable(scrollable)));\r\n    });\r\n  };\r\n  updateGlow();\r\n  const mo = new MutationObserver(updateGlow);\r\n  document.querySelectorAll('.oui-dialog').forEach(d => mo.observe(d, { attributes: true, attributeFilter: ['class'] }));\r\n  if ('ResizeObserver' in window) {\r\n    const ro = new ResizeObserver(updateGlow);\r\n    ro.observe(document.documentElement);\r\n    document.querySelectorAll('.oui-dialog, .oui-dialog-description').forEach(el => ro.observe(el));\r\n  }\r\n  const domMo = new MutationObserver(updateGlow);\r\n  document.querySelectorAll('.oui-dialog .oui-dialog-description').forEach(sc => domMo.observe(sc, { childList: true, subtree: true }));\r\n  window.addEventListener('resize', updateGlow);\r\n});\r\n"],"names":["document","addEventListener","mask","querySelector","activeDialog","isAnimating","preventTouch","e","preventDefault","startY","blockInteractions","body","style","pointerEvents","userSelect","overflow","documentElement","dialogButtons","querySelectorAll","forEach","button","unblockInteractions","onDialogTouchStart","touches","clientY","onDialogTouchMove","dialog","scrollTop","scrollHeight","offsetHeight","currentY","isScrollingDown","isScrollingUp","closeDialog","classList","remove","add","removeEventListener","handleTransitionEnd","event","target","contains","setTimeout","stopPropagation","targetId","getAttribute","getElementById","openDialog","passive","closeBtn","closingAppDialog","dialogGlowMap","WeakMap","setGlowForDialog","on","g","get","ensureDialogGlows","has","desc","topGlow","bottomGlow","createElement","className","appendChild","opacity","item","set","updateGlow","requestAnimationFrame","active","scrollable","findScrollableForDialog","Boolean","isScrollable","el","clientHeight","mo","MutationObserver","d","observe","attributes","attributeFilter","window","ro","ResizeObserver","domMo","sc","childList","subtree"],"version":3,"file":"webroot.29b09998.js.map"}