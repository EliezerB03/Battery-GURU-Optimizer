{"mappings":"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","sources":["<anon>","scripts/functions/guru_exec.js"],"sourcesContent":["// Script for Main Settings\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const serviceFile = \"/data/adb/modules/battery-guru-optimizer-9810/service.sh\";\n    const execSafe = (cmd)=>ksu.exec(cmd).catch(()=>\"\");\n    const buildSedReplace = (path, value)=>`sed -i \"s|echo ['\\\\\\\"][^'\\\\\\\"]*['\\\\\\\"] > ${path}|echo '${value}' > ${path}|g\" ${serviceFile}; `;\n    function scheduleIdle(fn) {\n        if ('requestIdleCallback' in window) requestIdleCallback(fn);\n        else setTimeout(fn, 0);\n    }\n    function initToggle({ id, paths, probePath, marker, defaultState = true }) {\n        const toggle = document.getElementById(id);\n        if (!toggle) return;\n        const container = toggle.closest(\".oui-container-toggle\");\n        if (container) container.classList.add(\"no-animation\");\n        const probe = probePath && paths[probePath] ? probePath : Object.keys(paths)[0];\n        const activeProbeVal = paths[probe].active;\n        const inactiveProbeVal = paths[probe].inactive;\n        const cacheKey = `toggle_state_${id}`;\n        let initialState = defaultState;\n        const cached = localStorage.getItem(cacheKey);\n        if (cached !== null) initialState = cached === \"1\";\n        toggle.checked = !!initialState;\n        if (container) requestAnimationFrame(()=>container.classList.remove(\"no-animation\"));\n        scheduleIdle(()=>{\n            try {\n                if (marker) execSafe(`grep -F \"# ${marker}=\" ${serviceFile} || echo \"# ${marker}=0\"`).then((svcLine)=>{\n                    const liveState = svcLine.includes(\"=1\");\n                    localStorage.setItem(cacheKey, liveState ? \"1\" : \"0\");\n                    if (paths && Object.keys(paths).length > 0) {\n                        let cmd = \"\";\n                        for(const p in paths){\n                            let val = liveState ? paths[p].active : paths[p].inactive;\n                            if (id === \"frq_on\" && liveState) {\n                                if (p.includes(\"policy0\") || p.includes(\"policy4\")) {\n                                    const name = p.includes(\"policy0\") ? \"lit\" : \"big\";\n                                    cmd += `val=$(grep -F \"# ${name}=\" ${serviceFile} | awk '{print $2}' | sed 's/Mhz//'); `;\n                                    cmd += `val=$((val*1000)); echo $val > ${p}; `;\n                                    cmd += buildSedReplace(p, `$((${name}*1000))`) + \" \";\n                                    continue;\n                                }\n                            }\n                            cmd += `echo '${val}' > ${p}; `;\n                            cmd += buildSedReplace(p, val);\n                        }\n                        scheduleIdle(()=>execSafe(cmd));\n                    }\n                    toggle.checked = liveState;\n                });\n                else execSafe(`grep -F \"${probe}\" ${serviceFile} || true`).then((svc)=>{\n                    let liveState = initialState;\n                    const hasActive = svc.includes(`echo '${activeProbeVal}' > ${probe}`) || svc.includes(`echo \"${activeProbeVal}\" > ${probe}\"`);\n                    const hasInactive = svc.includes(`echo '${inactiveProbeVal}' > ${probe}`) || svc.includes(`echo \"${inactiveProbeVal}\" > ${probe}\"`);\n                    if (hasActive && !hasInactive) liveState = true;\n                    else if (hasInactive && !hasActive) liveState = false;\n                    else execSafe(`cat ${probe} || true`).then((live)=>{\n                        liveState = live.trim() === activeProbeVal;\n                    });\n                    const shouldBe = liveState ? activeProbeVal : inactiveProbeVal;\n                    execSafe(`cat ${probe} || true`).then((live)=>{\n                        if (live.trim() !== \"\" && live.trim() !== shouldBe) {\n                            let cmd = \"\";\n                            for(const p in paths)cmd += `echo '${liveState ? paths[p].active : paths[p].inactive}' > ${p}; `;\n                            execSafe(cmd);\n                        }\n                        localStorage.setItem(cacheKey, liveState ? \"1\" : \"0\");\n                    });\n                    toggle.checked = liveState;\n                });\n            } catch (e) {}\n        });\n        toggle.addEventListener(\"change\", ()=>{\n            const state = toggle.checked;\n            localStorage.setItem(cacheKey, state ? \"1\" : \"0\");\n            let cmd = \"\";\n            if (marker) cmd += `sed -i \"s|# ${marker}=.*$|# ${marker}=${state ? 1 : 0}|\" ${serviceFile}; `;\n            if (id === \"thermal_opt\") {\n                const tmpBlockPath = `${serviceFile}.thermal_block.tmp`;\n                const tmpService = `${serviceFile}.tmp`;\n                if (state) {\n                    const activeBlock = `# thermalset_on=1\nsystem_table_set activity_manager_constants max_cached_processes=0,background_settle_time=0,fgservice_min_shown_time=0,fgservice_min_report_time=0,fgservice_screen_on_before_time=0,fgservice_screen_on_after_time=0,content_provider_retain_time=0,gc_timeout=0,gc_min_interval=0,full_pss_min_interval=0,full_pss_lowered_interval=0,power_check_interval=0,power_check_max_cpu_1=0,power_check_max_cpu_2=0,power_check_max_cpu_3=0,power_check_max_cpu_4=0,service_usage_interaction_time=0,usage_stats_interaction_interval=0,service_restart_duration=0,service_reset_run_duration=0,service_restart_duration_factor=0,service_min_restart_time_between=0,service_max_inactivity=0,service_bg_start_timeout=0,CUR_MAX_CACHED_PROCESSES=0,CUR_MAX_EMPTY_PROCESSES=0,CUR_TRIM_EMPTY_PROCESSES=0,CUR_TRIM_CACHED_PROCESSES=0\nchmod 666 /sys/devices/system/cpu/cpu[0-7]/max_cpus; chmod 666 /sys/devices/system/cpu/cpu[0-7]/min_cpus\necho 4 > /sys/devices/system/cpu/cpu4/core_ctl/max_cpus; echo 0 > /sys/devices/system/cpu/cpu4/core_ctl/min_cpus; echo 60 > /sys/devices/system/cpu/cpu4/core_ctl/busy_down_thres\necho 4 > /sys/devices/system/cpu/cpu4/core_ctl/task_thres; echo 80 > /sys/devices/system/cpu/cpu4/core_ctl/busy_up_thres; echo 100 > /sys/devices/system/cpu/cpu4/core_ctl/offline_delay_ms\necho 2 > /sys/devices/system/cpu/cpu0/core_ctl/min_cpus; echo 4 > /sys/devices/system/cpu/cpu0/core_ctl/max_cpus; echo 4 > /sys/devices/system/cpu/cpu0/core_ctl/task_thres\necho 80 > /sys/devices/system/cpu/cpu0/core_ctl/busy_up_thres; echo 100 > /sys/devices/system/cpu/cpu0/core_ctl/offline_delay_ms; echo 60 > /sys/devices/system/cpu/cpu0/core_ctl/busy_down_thres\nchmod 444 /sys/devices/system/cpu/cpu[0-7]/max_cpus\npm disable com.google.android.gms/.chimera.GmsIntentOperationService`;\n                    cmd += `cat > ${tmpBlockPath} <<'EOB'\\n${activeBlock}\\nEOB\\n`;\n                    cmd += `awk -v blk='${tmpBlockPath}' -v marker='^# thermalset_on=' 'BEGIN{skip=0;found=0} { if($0 ~ marker){ found=1; while((getline line < blk) > 0) print line; skip=1; next } if(skip){ if($0 ~ /^$/ || $0 ~ /^#-+/){ skip=0; print $0; next } else next } print $0 } END{ if(!found){ while((getline line < blk) > 0) print line } }' ${serviceFile} > ${tmpService}; `;\n                    cmd += `mv ${tmpService} ${serviceFile}; rm -f ${tmpBlockPath}; `;\n                } else {\n                    const inactiveBlock = `# thermalset_on=0\nsystem_table_unset activity_manager_constants\npm enable com.google.android.gms/.chimera.GmsIntentOperationService`;\n                    cmd += `cat > ${tmpBlockPath} <<'EOB'\\n${inactiveBlock}\\nEOB\\n`;\n                    cmd += `awk -v blk='${tmpBlockPath}' -v marker='^# thermalset_on=' 'BEGIN{skip=0;found=0} { if($0 ~ marker){ found=1; while((getline line < blk) > 0) print line; skip=1; next } if(skip){ if($0 ~ /^$/ || $0 ~ /^#-+/){ skip=0; print $0; next } else next } print $0 } END{ if(!found){ while((getline line < blk) > 0) print line } }' ${serviceFile} > ${tmpService}; `;\n                    cmd += `mv ${tmpService} ${serviceFile}; rm -f ${tmpBlockPath}; `;\n                }\n            } else if (paths && Object.keys(paths).length > 0) for(const p in paths){\n                let val = state ? paths[p].active : paths[p].inactive;\n                if (id === \"frq_on\" && state) {\n                    if (p.includes(\"policy0\") || p.includes(\"policy4\")) {\n                        const name = p.includes(\"policy0\") ? \"lit\" : \"big\";\n                        cmd += `val=$(grep -F \"# ${name}=\" ${serviceFile} | awk '{print $2}' | sed 's/Mhz//'); `;\n                        cmd += `val=$((val*1000)); echo $val > ${p}; `;\n                        cmd += buildSedReplace(p, `$((${name}*1000))`) + \" \";\n                        continue;\n                    }\n                }\n                cmd += `echo '${val}' > ${p}; `;\n                cmd += buildSedReplace(p, val);\n            }\n            scheduleIdle(()=>execSafe(cmd));\n        });\n    }\n    // General Settings (Toggles)\n    const toggles = [\n        {\n            id: \"cpu_hotplug\",\n            probePath: \"CPUHOTPLUG_STATE_MARKER\",\n            marker: \"hotplugset_on\",\n            defaultState: true,\n            paths: {\n                \"/sys/power/cpuhotplug/governor/user_mode\": {\n                    active: \"0\",\n                    inactive: \"1\"\n                },\n                \"/sys/power/cpuhotplug/governor/enabled\": {\n                    active: \"0\",\n                    inactive: \"1\"\n                }\n            }\n        },\n        {\n            id: \"power_eff\",\n            probePath: \"POWEREFFI_STATE_MARKER\",\n            marker: \"powereffiset_on\",\n            defaultState: true,\n            paths: {\n                \"/sys/module/workqueue/parameters/power_efficient\": {\n                    active: \"Y\",\n                    inactive: \"N\"\n                }\n            }\n        },\n        {\n            id: \"thermal_opt\",\n            probePath: \"THERMAL_STATE_MARKER\",\n            marker: \"thermalset_on\",\n            defaultState: true,\n            paths: {\n                \"THERMAL_STATE_MARKER\": {\n                    active: `system_table_set activity_manager_constants max_cached_processes=0,background_settle_time=0,fgservice_min_shown_time=0,fgservice_min_report_time=0,fgservice_screen_on_before_time=0,fgservice_screen_on_after_time=0,content_provider_retain_time=0,gc_timeout=0,gc_min_interval=0,full_pss_min_interval=0,full_pss_lowered_interval=0,power_check_interval=0,power_check_max_cpu_1=0,power_check_max_cpu_2=0,power_check_max_cpu_3=0,power_check_max_cpu_4=0,service_usage_interaction_time=0,usage_stats_interaction_interval=0,service_restart_duration=0,service_reset_run_duration=0,service_restart_duration_factor=0,service_min_restart_time_between=0,service_max_inactivity=0,service_bg_start_timeout=0,CUR_MAX_CACHED_PROCESSES=0,CUR_MAX_EMPTY_PROCESSES=0,CUR_TRIM_EMPTY_PROCESSES=0,CUR_TRIM_CACHED_PROCESSES=0; chmod 666 /sys/devices/system/cpu/cpu[0-7]/max_cpus; chmod 666 /sys/devices/system/cpu/cpu[0-7]/min_cpus; echo 4 > /sys/devices/system/cpu/cpu4/core_ctl/max_cpus; echo 0 > /sys/devices/system/cpu/cpu4/core_ctl/min_cpus; echo 60 > /sys/devices/system/cpu/cpu4/core_ctl/busy_down_thres; echo 4 > /sys/devices/system/cpu/cpu4/core_ctl/task_thres; echo 80 > /sys/devices/system/cpu/cpu4/core_ctl/busy_up_thres; echo 100 > /sys/devices/system/cpu/cpu4/core_ctl/offline_delay_ms; echo 2 > /sys/devices/system/cpu/cpu0/core_ctl/min_cpus; echo 4 > /sys/devices/system/cpu/cpu0/core_ctl/max_cpus; echo 4 > /sys/devices/system/cpu/cpu0/core_ctl/task_thres; echo 80 > /sys/devices/system/cpu/cpu0/core_ctl/busy_up_thres; echo 100 > /sys/devices/system/cpu/cpu0/core_ctl/offline_delay_ms; echo 60 > /sys/devices/system/cpu/cpu0/core_ctl/busy_down_thres; chmod 444 /sys/devices/system/cpu/cpu[0-7]/max_cpus; pm disable com.google.android.gms/.chimera.GmsIntentOperationService`.replace(/\\n/g, \" \"),\n                    inactive: `system_table_unset activity_manager_constants; pm enable com.google.android.gms/.chimera.GmsIntentOperationService`.replace(/\\n/g, \" \")\n                }\n            }\n        },\n        {\n            id: \"swap_opt\",\n            probePath: \"SWAP_STATE_MARKER\",\n            marker: \"swapset_on\",\n            defaultState: true,\n            paths: {\n                \"/proc/sys/vm/dirty_ratio\": {\n                    active: \"35\",\n                    inactive: \"0\"\n                },\n                \"/proc/sys/vm/dirty_background_ratio\": {\n                    active: \"10\",\n                    inactive: \"0\"\n                },\n                \"/proc/sys/vm/dirty_expire_centisecs\": {\n                    active: \"50000\",\n                    inactive: \"200\"\n                },\n                \"/proc/sys/vm/dirty_writeback_centisecs\": {\n                    active: \"20000\",\n                    inactive: \"500\"\n                },\n                \"/proc/sys/vm/laptop_mode\": {\n                    active: \"5\",\n                    inactive: \"0\"\n                },\n                \"/proc/sys/vm/swappiness\": {\n                    active: \"0\",\n                    inactive: \"100\"\n                }\n            }\n        },\n        {\n            id: \"storage_opt\",\n            probePath: \"STORAGE_STATE_MARKER\",\n            marker: \"storageset_on\",\n            defaultState: true,\n            paths: {\n                \"/sys/block/sda/queue/rotational\": {\n                    active: \"1\",\n                    inactive: \"0\"\n                },\n                \"/sys/block/sda/queue/add_random\": {\n                    active: \"1\",\n                    inactive: \"0\"\n                },\n                \"/sys/block/sda/queue/rq_affinity\": {\n                    active: \"2\",\n                    inactive: \"1\"\n                }\n            }\n        },\n        // Freq Settings (Toggle/Popup)\n        {\n            id: \"frq_on\",\n            probePath: \"FRQ_STATE_MARKER\",\n            marker: \"frqset_on\",\n            defaultState: true,\n            paths: {\n                \"/sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq\": {\n                    active: null,\n                    inactive: \"1794000\"\n                },\n                \"/sys/devices/system/cpu/cpufreq/policy4/scaling_max_freq\": {\n                    active: null,\n                    inactive: \"2704000\"\n                }\n            }\n        },\n        // Voltage Settings (Toggle/Sliders)\n        {\n            id: \"volt_on\",\n            probePath: \"VOLTAGE_STATE_MARKER\",\n            marker: \"voltset_on\",\n            defaultState: true,\n            paths: {\n                \"/sys/power/percent_margin/big_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/lit_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/g3d_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/mif_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/aud_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/cam_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/cp_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/disp_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/fsys0_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/int_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/intcam_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/iva_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                },\n                \"/sys/power/percent_margin/score_margin_percent\": {\n                    active: null,\n                    inactive: \"0\"\n                }\n            }\n        },\n        // Labs (Toggles)\n        {\n            id: \"kernel_debug\",\n            probePath: \"DEBUG_STATE_MARKER\",\n            marker: \"kerneldebug_on\",\n            defaultState: false,\n            paths: {\n                \"/proc/sys/kernel/panic\": {\n                    active: \"1\",\n                    inactive: \"0\"\n                },\n                \"/sys/kernel/debug/debug_enabled\": {\n                    active: \"Y\",\n                    inactive: \"N\"\n                },\n                \"/sys/kernel/debug/seclog/seclog_enabled\": {\n                    active: \"Y\",\n                    inactive: \"N\"\n                }\n            }\n        }\n    ];\n    toggles.forEach((cfg)=>initToggle(cfg));\n    // Freq Settings (Popup Menu)\n    (function initPopup() {\n        const popup = document.getElementById(\"popup-menu\");\n        if (!popup) return;\n        const popupContent = popup.querySelector(\".popup-content\");\n        const optionsList = document.getElementById(\"popup-options\");\n        let pointerDownOutside = false;\n        let popupOpen = false;\n        let optionsEnabled = true;\n        function disableOptionsTemporarily(ms = 300) {\n            optionsEnabled = false;\n            setTimeout(()=>{\n                optionsEnabled = true;\n            }, ms);\n        }\n        document.addEventListener(\"pointerdown\", (e)=>{\n            pointerDownOutside = !popup.contains(e.target);\n        }, true);\n        document.addEventListener(\"pointerup\", (e)=>{\n            if (popupOpen && pointerDownOutside && !popup.contains(e.target)) {\n                closePopup();\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }, true);\n        [\n            \"click\",\n            \"pointerdown\",\n            \"pointerup\",\n            \"touchstart\",\n            \"touchend\"\n        ].forEach((evt)=>{\n            document.addEventListener(evt, (e)=>{\n                if (popupOpen && !popup.contains(e.target)) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }, {\n                capture: true,\n                passive: false\n            });\n        });\n        function closePopup() {\n            popup.classList.remove(\"show\");\n            popupOpen = false;\n            optionsEnabled = true;\n            document.querySelectorAll(\".popup-label-active\").forEach((el)=>el.classList.remove(\"popup-label-active\"));\n        }\n        [\n            \"frq_little\",\n            \"frq_big\"\n        ].forEach((id)=>{\n            const trigger = document.getElementById(id);\n            if (!trigger) return;\n            const defaults = {\n                frq_little: \"1690 Mhz\",\n                frq_big: \"1794 Mhz\"\n            };\n            let storedValue = localStorage.getItem(id) || defaults[id];\n            trigger.dataset.selected = storedValue;\n            let rightSpan = trigger.querySelector(\".popup-value\");\n            if (!rightSpan) {\n                rightSpan = document.createElement(\"span\");\n                rightSpan.className = \"popup-value\";\n                trigger.appendChild(rightSpan);\n            }\n            rightSpan.textContent = storedValue;\n            trigger.addEventListener(\"click\", (e)=>{\n                e.stopPropagation();\n                if (trigger.classList.contains(\"popup-label-active\")) {\n                    closePopup();\n                    return;\n                }\n                document.querySelectorAll(\".popup-label-active\").forEach((el)=>el.classList.remove(\"popup-label-active\"));\n                trigger.classList.add(\"popup-label-active\");\n                disableOptionsTemporarily(300);\n                const options = JSON.parse(trigger.dataset.options);\n                const selected = trigger.dataset.selected;\n                const isOpen = popup.classList.contains(\"show\");\n                if (isOpen) {\n                    positionPopup(trigger);\n                    popupContent.classList.add(\"switching\");\n                    setTimeout(()=>{\n                        fillPopup(options, selected, trigger);\n                        popupContent.classList.remove(\"switching\");\n                    }, 150);\n                } else {\n                    fillPopup(options, selected, trigger);\n                    requestAnimationFrame(()=>{\n                        positionPopup(trigger);\n                        popup.classList.add(\"show\");\n                        popupOpen = true;\n                    });\n                }\n            });\n        });\n        function fillPopup(options, selected, trigger) {\n            optionsList.innerHTML = \"\";\n            options.forEach((opt, index)=>{\n                const li = document.createElement(\"li\");\n                li.className = \"oui-bubble-item\";\n                let effectClass = \"\";\n                if (options.length === 1) effectClass = \"rounded-all\";\n                else if (index === 0) effectClass = \"rounded-top\";\n                else if (index === options.length - 1) effectClass = \"rounded-bottom\";\n                li.innerHTML = `<div class=\"popup-inner\"><span class=\"popup-text\">${opt}</span></div><span class=\"popup-effect ${effectClass}\"></span>`;\n                if (opt === selected) {\n                    li.classList.add(\"selected\");\n                    const check = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                    check.setAttribute(\"viewBox\", \"0 0 24 24\");\n                    check.setAttribute(\"class\", \"popup-icon-selected checkmark\");\n                    check.innerHTML = `<path style=\"fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:3\" d=\"m5 12 5 5 9-9\"/>`;\n                    li.querySelector(\".popup-inner\").appendChild(check);\n                }\n                const optionInner = li.querySelector(\".popup-inner\");\n                const touchEffect = li.querySelector(\".popup-effect\");\n                let pointerDown = false;\n                let pointerInside = false;\n                let cancelled = false;\n                const cleanupEffect = ()=>{\n                    if (touchEffect.classList.contains(\"animate-in\")) {\n                        touchEffect.classList.remove(\"animate-in\");\n                        touchEffect.classList.add(\"animate-out\");\n                        const onAnimEnd = ()=>{\n                            touchEffect.classList.remove(\"animate-out\");\n                            touchEffect.removeEventListener(\"animationend\", onAnimEnd);\n                        };\n                        touchEffect.addEventListener(\"animationend\", onAnimEnd);\n                    }\n                    optionInner.classList.remove(\"pressed-effect\");\n                };\n                li.addEventListener(\"pointerdown\", (ev)=>{\n                    if (!optionsEnabled) {\n                        ev.stopPropagation();\n                        return;\n                    }\n                    pointerDown = true;\n                    pointerInside = true;\n                    cancelled = false;\n                    optionInner.classList.add(\"pressed-effect\");\n                    touchEffect.classList.add(\"animate-in\");\n                    setTimeout(()=>{\n                        if (!cancelled) cleanupEffect();\n                    }, 400);\n                });\n                li.addEventListener(\"pointermove\", (ev)=>{\n                    if (!pointerDown) return;\n                    const rect = li.getBoundingClientRect();\n                    pointerInside = ev.clientX >= rect.left && ev.clientX <= rect.right && ev.clientY >= rect.top && ev.clientY <= rect.bottom;\n                    if (!pointerInside && !cancelled) {\n                        cancelled = true;\n                        pointerDown = false;\n                        cleanupEffect();\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                    }\n                });\n                li.addEventListener(\"pointerleave\", ()=>{\n                    if (pointerDown && !cancelled) {\n                        cancelled = true;\n                        pointerDown = false;\n                        cleanupEffect();\n                    }\n                });\n                li.addEventListener(\"pointerup\", ()=>{\n                    pointerDown = false;\n                    cleanupEffect();\n                });\n                li.addEventListener(\"pointercancel\", ()=>{\n                    pointerDown = false;\n                    cancelled = true;\n                    cleanupEffect();\n                });\n                li.addEventListener(\"click\", (e)=>{\n                    if (!optionsEnabled) return;\n                    e.stopPropagation();\n                    popup.classList.remove(\"show\");\n                    popupOpen = false;\n                    optionsEnabled = true;\n                    document.querySelectorAll(\".popup-label-active\").forEach((el)=>el.classList.remove(\"popup-label-active\"));\n                    trigger.dataset.selected = opt;\n                    let valueSpan = trigger.querySelector(\".popup-value\");\n                    if (!valueSpan) {\n                        valueSpan = document.createElement(\"span\");\n                        valueSpan.className = \"popup-value\";\n                        trigger.appendChild(valueSpan);\n                    }\n                    valueSpan.textContent = opt;\n                    localStorage.setItem(trigger.id, opt);\n                    const path = trigger.id === \"frq_little\" ? \"/sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq\" : \"/sys/devices/system/cpu/cpufreq/policy4/scaling_max_freq\";\n                    const val = opt.replace(\"Mhz\", \"\") * 1000;\n                    const markerLine = trigger.id === \"frq_little\" ? \"# lit=\" : \"# big=\";\n                    const cmd = `echo '${val}' > ${path}; sed -i \"s|echo ['\\\\\\\"][^'\\\\\\\"]*['\\\\\\\"] > ${path}|echo '${val}' > ${path}|g\" ${serviceFile}; sed -i \"s|${markerLine}.*|${markerLine}${opt}|\" ${serviceFile}`;\n                    scheduleIdle(()=>execSafe(cmd));\n                });\n                optionsList.appendChild(li);\n            });\n            let valueSpan = trigger.querySelector(\".popup-value\");\n            if (valueSpan) valueSpan.textContent = selected;\n        }\n        function positionPopup(trigger) {\n            const rect = trigger.getBoundingClientRect();\n            const popupHeight = popup.offsetHeight;\n            const popupWidth = popup.offsetWidth;\n            const screenWidth = window.innerWidth;\n            const optionCount = JSON.parse(trigger.dataset.options).length;\n            const extraOffset = optionCount > 10 ? 40 : 0;\n            let top = rect.top + window.scrollY + rect.height / 2 - popupHeight / 2 - extraOffset - 177;\n            let left = rect.right + 8;\n            if (left + popupWidth > screenWidth) left = screenWidth - popupWidth - 26;\n            popup.style.top = `${top}px`;\n            popup.style.left = `${left}px`;\n        }\n    })();\n    const voltageSliders = [\n        {\n            id: \"volt_big\",\n            path: \"/sys/power/percent_margin/big_margin_percent\",\n            marker: \"big_volt\"\n        },\n        {\n            id: \"volt_little\",\n            path: \"/sys/power/percent_margin/lit_margin_percent\",\n            marker: \"lit_volt\"\n        },\n        {\n            id: \"volt_gpu\",\n            path: \"/sys/power/percent_margin/g3d_margin_percent\",\n            marker: \"g3d_volt\"\n        },\n        {\n            id: \"volt_mif\",\n            path: \"/sys/power/percent_margin/mif_margin_percent\",\n            marker: \"mif_volt\"\n        },\n        {\n            id: \"volt_audio\",\n            path: \"/sys/power/percent_margin/aud_margin_percent\",\n            marker: \"aud_volt\"\n        },\n        {\n            id: \"volt_camera\",\n            path: \"/sys/power/percent_margin/cam_margin_percent\",\n            marker: \"cam_volt\"\n        },\n        {\n            id: \"volt_cp\",\n            path: \"/sys/power/percent_margin/cp_margin_percent\",\n            marker: \"cp_volt\"\n        },\n        {\n            id: \"volt_display\",\n            path: \"/sys/power/percent_margin/disp_margin_percent\",\n            marker: \"disp_volt\"\n        },\n        {\n            id: \"volt_fsys\",\n            path: \"/sys/power/percent_margin/fsys0_margin_percent\",\n            marker: \"fsys0_volt\"\n        },\n        {\n            id: \"volt_int\",\n            path: \"/sys/power/percent_margin/int_margin_percent\",\n            marker: \"int_volt\"\n        },\n        {\n            id: \"volt_intcamera\",\n            path: \"/sys/power/percent_margin/intcam_margin_percent\",\n            marker: \"intcam_volt\"\n        },\n        {\n            id: \"volt_iva\",\n            path: \"/sys/power/percent_margin/iva_margin_percent\",\n            marker: \"iva_volt\"\n        },\n        {\n            id: \"volt_score\",\n            path: \"/sys/power/percent_margin/score_margin_percent\",\n            marker: \"score_volt\"\n        }\n    ];\n    function sliderValueToVoltage(sliderValue) {\n        return Math.round(sliderValue) - 10;\n    }\n    function voltageToSliderValue(voltageValue) {\n        return Math.round(parseInt(voltageValue)) + 10;\n    }\n    voltageSliders.forEach((config)=>{\n        const slider = document.getElementById(config.id);\n        if (!slider) return;\n        const defaultVoltage = config.id === \"volt_cp\" ? 0 : -4;\n        const cacheKey = `voltage_${config.id}`;\n        let storedVoltage = localStorage.getItem(cacheKey);\n        if (storedVoltage === null) storedVoltage = defaultVoltage;\n        else storedVoltage = parseInt(storedVoltage);\n        slider.value = voltageToSliderValue(storedVoltage);\n        scheduleIdle(()=>{\n            try {\n                const fallbackDefault = config.id === \"volt_cp\" ? 0 : -4;\n                execSafe(`grep -F \"# ${config.marker}=\" ${serviceFile} || echo \"# ${config.marker}=${fallbackDefault}\"`).then((markerLine)=>{\n                    const match = markerLine.match(new RegExp(`# ${config.marker}=(-?\\\\d+)`));\n                    if (match) {\n                        const currentVoltage = parseInt(match[1]);\n                        slider.value = voltageToSliderValue(currentVoltage);\n                        localStorage.setItem(cacheKey, currentVoltage);\n                        const volToggle = document.getElementById(\"volt_on\");\n                        if (volToggle && volToggle.checked) {\n                            const cmd = `echo '${currentVoltage}' > ${config.path}; ` + buildSedReplace(config.path, currentVoltage);\n                            scheduleIdle(()=>execSafe(cmd));\n                        }\n                    }\n                });\n            } catch (e) {}\n        });\n        let changeTimeout;\n        slider.addEventListener(\"input\", ()=>{\n            const sliderValue = Math.round(parseFloat(slider.value));\n            const voltageValue = sliderValueToVoltage(sliderValue);\n            localStorage.setItem(cacheKey, voltageValue);\n            clearTimeout(changeTimeout);\n            changeTimeout = setTimeout(()=>{\n                const volToggle = document.getElementById(\"volt_on\");\n                const isEnabled = volToggle && volToggle.checked;\n                let cmd = \"\";\n                cmd += `sed -i \"s|# ${config.marker}=.*|# ${config.marker}=${voltageValue}|\" ${serviceFile}; `;\n                if (isEnabled) {\n                    cmd += `echo '${voltageValue}' > ${config.path}; `;\n                    cmd += buildSedReplace(config.path, voltageValue);\n                } else {\n                    cmd += `echo '0' > ${config.path}; `;\n                    cmd += buildSedReplace(config.path, \"0\");\n                }\n                scheduleIdle(()=>execSafe(cmd));\n            }, 150);\n        });\n    });\n    const originalVolToggle = document.getElementById(\"volt_on\");\n    if (originalVolToggle) originalVolToggle.addEventListener(\"change\", ()=>{\n        const isEnabled = originalVolToggle.checked;\n        voltageSliders.forEach((config)=>{\n            const slider = document.getElementById(config.id);\n            if (!slider) return;\n            const sliderValue = Math.round(parseFloat(slider.value));\n            const voltageValue = sliderValueToVoltage(sliderValue);\n            const actualValue = isEnabled ? voltageValue : 0;\n            const cmd = `echo '${actualValue}' > ${config.path}; ` + buildSedReplace(config.path, actualValue);\n            scheduleIdle(()=>execSafe(cmd));\n        });\n    });\n    // LocalStorage Auto-Apply (Checker)\n    let isInitialLoadComplete = false;\n    let commandQueue = [];\n    let isProcessingCommands = false;\n    const processCommandQueue = async ()=>{\n        if (isProcessingCommands || commandQueue.length === 0) return;\n        isProcessingCommands = true;\n        while(commandQueue.length > 0){\n            const command = commandQueue.shift();\n            try {\n                await execSafe(command);\n                await new Promise((resolve)=>setTimeout(resolve, 15));\n            } catch (e) {}\n        }\n        isProcessingCommands = false;\n    };\n    const queueCommand = (cmd)=>{\n        commandQueue.push(cmd);\n        setTimeout(processCommandQueue, 0);\n    };\n    scheduleIdle(()=>{\n        try {\n            const readServiceValue = async (marker)=>{\n                try {\n                    const result = await execSafe(`grep -m1 \"^[#][[:space:]]*${marker}=\" ${serviceFile} | head -n1 | cut -d'=' -f2`);\n                    return result.trim();\n                } catch (e) {\n                    return null;\n                }\n            };\n            const compareFreqValues = (stored, serviceValue)=>{\n                if (!stored || !serviceValue) return false;\n                const storedNumeric = Number(stored.replace(/\\s*Mhz\\s*/i, \"\"));\n                const serviceNumeric = Number(serviceValue.replace(/\\s*Mhz\\s*/i, \"\"));\n                return storedNumeric === serviceNumeric;\n            };\n            setTimeout(()=>{\n                toggles.forEach((cfg)=>{\n                    const id = cfg.id;\n                    const cacheKey = `toggle_state_${id}`;\n                    const el = document.getElementById(id);\n                    if (!el) return;\n                    let storedState;\n                    if (localStorage.getItem(cacheKey) === null) {\n                        const defaultState = cfg.defaultState !== undefined ? cfg.defaultState : true;\n                        storedState = defaultState;\n                        localStorage.setItem(cacheKey, defaultState ? \"1\" : \"0\");\n                    } else storedState = localStorage.getItem(cacheKey) === \"1\";\n                    el.checked = storedState;\n                    const ev = new Event('change', {\n                        bubbles: true\n                    });\n                    el.dispatchEvent(ev);\n                });\n            }, 0);\n            setTimeout(async ()=>{\n                for (const id of [\n                    \"frq_little\",\n                    \"frq_big\"\n                ]){\n                    const trigger = document.getElementById(id);\n                    if (!trigger) continue;\n                    const defaults = {\n                        frq_little: \"1690 Mhz\",\n                        frq_big: \"1794 Mhz\"\n                    };\n                    const marker = id === \"frq_little\" ? \"lit\" : \"big\";\n                    let storedValue;\n                    if (localStorage.getItem(id) === null) {\n                        storedValue = defaults[id];\n                        localStorage.setItem(id, storedValue);\n                    } else storedValue = localStorage.getItem(id);\n                    trigger.dataset.selected = storedValue;\n                    let rightSpan = trigger.querySelector(\".popup-value\");\n                    if (!rightSpan) {\n                        rightSpan = document.createElement(\"span\");\n                        rightSpan.className = \"popup-value\";\n                        trigger.appendChild(rightSpan);\n                    }\n                    rightSpan.textContent = storedValue;\n                    setTimeout(async ()=>{\n                        try {\n                            const serviceValue = await readServiceValue(marker);\n                            const needsUpdate = !compareFreqValues(storedValue, serviceValue);\n                            if (needsUpdate) {\n                                const path = id === \"frq_little\" ? \"/sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq\" : \"/sys/devices/system/cpu/cpufreq/policy4/scaling_max_freq\";\n                                const freqToggle = document.getElementById(\"frq_on\");\n                                const isFreqEnabled = freqToggle && freqToggle.checked;\n                                const defaultValues = {\n                                    frq_little: 1794000,\n                                    frq_big: 2704000\n                                };\n                                let actualValue;\n                                if (isFreqEnabled) {\n                                    const numeric = Number(storedValue.replace(/\\s*Mhz\\s*/i, \"\"));\n                                    actualValue = numeric * 1000;\n                                } else actualValue = defaultValues[id];\n                                const markerLine = id === \"frq_little\" ? \"# lit=\" : \"# big=\";\n                                const cmd = `sed -i \"s|${markerLine}.*|${markerLine}${storedValue}|\" ${serviceFile}; ` + `echo '${actualValue}' > ${path}; ` + buildSedReplace(path, actualValue);\n                                queueCommand(cmd);\n                            }\n                        } catch (e) {}\n                    }, id === \"frq_little\" ? 120 : 200);\n                }\n            }, 50);\n            setTimeout(async ()=>{\n                for(let i = 0; i < voltageSliders.length; i++){\n                    const config = voltageSliders[i];\n                    setTimeout(async ()=>{\n                        try {\n                            const cacheKey = `voltage_${config.id}`;\n                            const slider = document.getElementById(config.id);\n                            if (!slider) return;\n                            let storedVoltage;\n                            if (localStorage.getItem(cacheKey) === null) {\n                                const fallbackDefault = config.id === \"volt_cp\" ? 0 : -4;\n                                storedVoltage = fallbackDefault;\n                                localStorage.setItem(cacheKey, String(storedVoltage));\n                            } else storedVoltage = Number(localStorage.getItem(cacheKey));\n                            slider.value = voltageToSliderValue(storedVoltage);\n                            const serviceValue = await readServiceValue(config.marker);\n                            const needsUpdate = serviceValue === null || Number(serviceValue) !== storedVoltage;\n                            if (needsUpdate) {\n                                const volToggle = document.getElementById(\"volt_on\");\n                                const isEnabled = volToggle ? volToggle.checked : false;\n                                const actualValue = isEnabled ? storedVoltage : 0;\n                                const cmd = `\n                if grep -m1 -q \"^[#][[:space:]]*${config.marker}=\" \"${serviceFile}\"; then\n                  sed -i 's|^[#][[:space:]]*${config.marker}=.*|# ${config.marker}=${storedVoltage}|' \"${serviceFile}\";\n                else\n                  printf \"# ${config.marker}=%s\\\\n\" \"${storedVoltage}\" >> \"${serviceFile}\";\n                fi\n                echo '${actualValue}' > ${config.path};\n                ${buildSedReplace(config.path, actualValue)}\n              `.trim();\n                                queueCommand(cmd);\n                            }\n                        } catch (e) {}\n                    }, i * 80);\n                }\n                setTimeout(()=>{\n                    isInitialLoadComplete = true;\n                }, voltageSliders.length * 80 + 450);\n            }, 250);\n        } catch (e) {\n            setTimeout(()=>{\n                isInitialLoadComplete = true;\n            }, 350);\n        }\n    });\n    window.isInitialLoadComplete = ()=>isInitialLoadComplete;\n});\n\n//# sourceMappingURL=webroot.08566efa.js.map\n","// Script for Main Settings\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const serviceFile = \"/data/adb/modules/battery-guru-optimizer-9810/service.sh\";\r\n  const execSafe = (cmd) => ksu.exec(cmd).catch(() => \"\");\r\n  const buildSedReplace = (path, value) =>\r\n    `sed -i \"s|echo ['\\\\\\\"][^'\\\\\\\"]*['\\\\\\\"] > ${path}|echo '${value}' > ${path}|g\" ${serviceFile}; `;\r\n  function scheduleIdle(fn) {\r\n    if ('requestIdleCallback' in window) requestIdleCallback(fn);\r\n    else setTimeout(fn, 0);\r\n  }\r\n  function initToggle({ id, paths, probePath, marker, defaultState = true }) {\r\n    const toggle = document.getElementById(id);\r\n    if (!toggle) return;\r\n    const container = toggle.closest(\".oui-container-toggle\");\r\n    if (container) container.classList.add(\"no-animation\");\r\n    const probe = probePath && paths[probePath] ? probePath : Object.keys(paths)[0];\r\n    const activeProbeVal = paths[probe].active;\r\n    const inactiveProbeVal = paths[probe].inactive;\r\n    const cacheKey = `toggle_state_${id}`;\r\n    let initialState = defaultState;\r\n    const cached = localStorage.getItem(cacheKey);\r\n    if (cached !== null) initialState = cached === \"1\";\r\n    toggle.checked = !!initialState;\r\n    if (container) requestAnimationFrame(() => container.classList.remove(\"no-animation\"));\r\n    scheduleIdle(() => {\r\n      try {\r\n        if (marker) {\r\n          execSafe(`grep -F \"# ${marker}=\" ${serviceFile} || echo \"# ${marker}=0\"`).then((svcLine) => {\r\n            const liveState = svcLine.includes(\"=1\");\r\n            localStorage.setItem(cacheKey, liveState ? \"1\" : \"0\");\r\n            if (paths && Object.keys(paths).length > 0) {\r\n              let cmd = \"\";\r\n              for (const p in paths) {\r\n                let val = liveState ? paths[p].active : paths[p].inactive;\r\n                if (id === \"frq_on\" && liveState) {\r\n                  if (p.includes(\"policy0\") || p.includes(\"policy4\")) {\r\n                    const name = p.includes(\"policy0\") ? \"lit\" : \"big\";\r\n                    cmd += `val=$(grep -F \"# ${name}=\" ${serviceFile} | awk '{print $2}' | sed 's/Mhz//'); `;\r\n                    cmd += `val=$((val*1000)); echo $val > ${p}; `;\r\n                    cmd += buildSedReplace(p, `$((${name}*1000))`) + \" \";\r\n                    continue;\r\n                  }\r\n                }\r\n                cmd += `echo '${val}' > ${p}; `;\r\n                cmd += buildSedReplace(p, val);\r\n              }\r\n              scheduleIdle(() => execSafe(cmd));\r\n            }\r\n            toggle.checked = liveState;\r\n          });\r\n        } else {\r\n          execSafe(`grep -F \"${probe}\" ${serviceFile} || true`).then((svc) => {\r\n            let liveState = initialState;\r\n            const hasActive = svc.includes(`echo '${activeProbeVal}' > ${probe}`) || svc.includes(`echo \"${activeProbeVal}\" > ${probe}\"`);\r\n            const hasInactive = svc.includes(`echo '${inactiveProbeVal}' > ${probe}`) || svc.includes(`echo \"${inactiveProbeVal}\" > ${probe}\"`);\r\n            if (hasActive && !hasInactive) liveState = true;\r\n            else if (hasInactive && !hasActive) liveState = false;\r\n            else execSafe(`cat ${probe} || true`).then((live) => {\r\n              liveState = (live.trim() === activeProbeVal);\r\n            });\r\n            const shouldBe = liveState ? activeProbeVal : inactiveProbeVal;\r\n            execSafe(`cat ${probe} || true`).then((live) => {\r\n              if (live.trim() !== \"\" && live.trim() !== shouldBe) {\r\n                let cmd = \"\";\r\n                for (const p in paths) cmd += `echo '${liveState ? paths[p].active : paths[p].inactive}' > ${p}; `;\r\n                execSafe(cmd);\r\n              }\r\n              localStorage.setItem(cacheKey, liveState ? \"1\" : \"0\");\r\n            });\r\n            toggle.checked = liveState;\r\n          });\r\n        }\r\n      } catch { /* ¯\\_(ツ)_/¯ */ }\r\n    });\r\n    toggle.addEventListener(\"change\", () => {\r\n      const state = toggle.checked;\r\n      localStorage.setItem(cacheKey, state ? \"1\" : \"0\");\r\n      let cmd = \"\";\r\n      if (marker) {\r\n        cmd += `sed -i \"s|# ${marker}=.*$|# ${marker}=${state ? 1 : 0}|\" ${serviceFile}; `;\r\n      }\r\n      if (id === \"thermal_opt\") {\r\n        const tmpBlockPath = `${serviceFile}.thermal_block.tmp`;\r\n        const tmpService = `${serviceFile}.tmp`;\r\n        if (state) {\r\n          const activeBlock = `# thermalset_on=1\r\nsystem_table_set activity_manager_constants max_cached_processes=0,background_settle_time=0,fgservice_min_shown_time=0,fgservice_min_report_time=0,fgservice_screen_on_before_time=0,fgservice_screen_on_after_time=0,content_provider_retain_time=0,gc_timeout=0,gc_min_interval=0,full_pss_min_interval=0,full_pss_lowered_interval=0,power_check_interval=0,power_check_max_cpu_1=0,power_check_max_cpu_2=0,power_check_max_cpu_3=0,power_check_max_cpu_4=0,service_usage_interaction_time=0,usage_stats_interaction_interval=0,service_restart_duration=0,service_reset_run_duration=0,service_restart_duration_factor=0,service_min_restart_time_between=0,service_max_inactivity=0,service_bg_start_timeout=0,CUR_MAX_CACHED_PROCESSES=0,CUR_MAX_EMPTY_PROCESSES=0,CUR_TRIM_EMPTY_PROCESSES=0,CUR_TRIM_CACHED_PROCESSES=0\r\nchmod 666 /sys/devices/system/cpu/cpu[0-7]/max_cpus; chmod 666 /sys/devices/system/cpu/cpu[0-7]/min_cpus\r\necho 4 > /sys/devices/system/cpu/cpu4/core_ctl/max_cpus; echo 0 > /sys/devices/system/cpu/cpu4/core_ctl/min_cpus; echo 60 > /sys/devices/system/cpu/cpu4/core_ctl/busy_down_thres\r\necho 4 > /sys/devices/system/cpu/cpu4/core_ctl/task_thres; echo 80 > /sys/devices/system/cpu/cpu4/core_ctl/busy_up_thres; echo 100 > /sys/devices/system/cpu/cpu4/core_ctl/offline_delay_ms\r\necho 2 > /sys/devices/system/cpu/cpu0/core_ctl/min_cpus; echo 4 > /sys/devices/system/cpu/cpu0/core_ctl/max_cpus; echo 4 > /sys/devices/system/cpu/cpu0/core_ctl/task_thres\r\necho 80 > /sys/devices/system/cpu/cpu0/core_ctl/busy_up_thres; echo 100 > /sys/devices/system/cpu/cpu0/core_ctl/offline_delay_ms; echo 60 > /sys/devices/system/cpu/cpu0/core_ctl/busy_down_thres\r\nchmod 444 /sys/devices/system/cpu/cpu[0-7]/max_cpus\r\npm disable com.google.android.gms/.chimera.GmsIntentOperationService`;\r\n          cmd += `cat > ${tmpBlockPath} <<'EOB'\\n${activeBlock}\\nEOB\\n`;\r\n          cmd += `awk -v blk='${tmpBlockPath}' -v marker='^# thermalset_on=' 'BEGIN{skip=0;found=0} { if($0 ~ marker){ found=1; while((getline line < blk) > 0) print line; skip=1; next } if(skip){ if($0 ~ /^$/ || $0 ~ /^#-+/){ skip=0; print $0; next } else next } print $0 } END{ if(!found){ while((getline line < blk) > 0) print line } }' ${serviceFile} > ${tmpService}; `;\r\n          cmd += `mv ${tmpService} ${serviceFile}; rm -f ${tmpBlockPath}; `;\r\n        } else {\r\n          const inactiveBlock = `# thermalset_on=0\r\nsystem_table_unset activity_manager_constants\r\npm enable com.google.android.gms/.chimera.GmsIntentOperationService`;\r\n          cmd += `cat > ${tmpBlockPath} <<'EOB'\\n${inactiveBlock}\\nEOB\\n`;\r\n          cmd += `awk -v blk='${tmpBlockPath}' -v marker='^# thermalset_on=' 'BEGIN{skip=0;found=0} { if($0 ~ marker){ found=1; while((getline line < blk) > 0) print line; skip=1; next } if(skip){ if($0 ~ /^$/ || $0 ~ /^#-+/){ skip=0; print $0; next } else next } print $0 } END{ if(!found){ while((getline line < blk) > 0) print line } }' ${serviceFile} > ${tmpService}; `;\r\n          cmd += `mv ${tmpService} ${serviceFile}; rm -f ${tmpBlockPath}; `;\r\n        }\r\n      } else if (paths && Object.keys(paths).length > 0) {\r\n        for (const p in paths) {\r\n          let val = state ? paths[p].active : paths[p].inactive;\r\n          if (id === \"frq_on\" && state) {\r\n            if (p.includes(\"policy0\") || p.includes(\"policy4\")) {\r\n              const name = p.includes(\"policy0\") ? \"lit\" : \"big\";\r\n              cmd += `val=$(grep -F \"# ${name}=\" ${serviceFile} | awk '{print $2}' | sed 's/Mhz//'); `;\r\n              cmd += `val=$((val*1000)); echo $val > ${p}; `;\r\n              cmd += buildSedReplace(p, `$((${name}*1000))`) + \" \";\r\n              continue;\r\n            }\r\n          }\r\n          cmd += `echo '${val}' > ${p}; `;\r\n          cmd += buildSedReplace(p, val);\r\n        }\r\n      }\r\n      scheduleIdle(() => execSafe(cmd));\r\n    });\r\n  }\r\n  // General Settings (Toggles)\r\n  const toggles = [\r\n    { id: \"cpu_hotplug\", probePath: \"CPUHOTPLUG_STATE_MARKER\", marker: \"hotplugset_on\",\r\n      defaultState: true, \r\n      paths: {\r\n        \"/sys/power/cpuhotplug/governor/user_mode\": { active: \"0\", inactive: \"1\" },\r\n        \"/sys/power/cpuhotplug/governor/enabled\":   { active: \"0\", inactive: \"1\" }\r\n    }},\r\n    { id: \"power_eff\", probePath: \"POWEREFFI_STATE_MARKER\", marker: \"powereffiset_on\",\r\n      defaultState: true, \r\n      paths: { \"/sys/module/workqueue/parameters/power_efficient\": { active: \"Y\", inactive: \"N\" } \r\n    }},\r\n    { id: \"thermal_opt\", probePath: \"THERMAL_STATE_MARKER\", marker: \"thermalset_on\",\r\n      defaultState: true,\r\n      paths: { \"THERMAL_STATE_MARKER\": {\r\n        active: `system_table_set activity_manager_constants max_cached_processes=0,background_settle_time=0,fgservice_min_shown_time=0,fgservice_min_report_time=0,fgservice_screen_on_before_time=0,fgservice_screen_on_after_time=0,content_provider_retain_time=0,gc_timeout=0,gc_min_interval=0,full_pss_min_interval=0,full_pss_lowered_interval=0,power_check_interval=0,power_check_max_cpu_1=0,power_check_max_cpu_2=0,power_check_max_cpu_3=0,power_check_max_cpu_4=0,service_usage_interaction_time=0,usage_stats_interaction_interval=0,service_restart_duration=0,service_reset_run_duration=0,service_restart_duration_factor=0,service_min_restart_time_between=0,service_max_inactivity=0,service_bg_start_timeout=0,CUR_MAX_CACHED_PROCESSES=0,CUR_MAX_EMPTY_PROCESSES=0,CUR_TRIM_EMPTY_PROCESSES=0,CUR_TRIM_CACHED_PROCESSES=0; chmod 666 /sys/devices/system/cpu/cpu[0-7]/max_cpus; chmod 666 /sys/devices/system/cpu/cpu[0-7]/min_cpus; echo 4 > /sys/devices/system/cpu/cpu4/core_ctl/max_cpus; echo 0 > /sys/devices/system/cpu/cpu4/core_ctl/min_cpus; echo 60 > /sys/devices/system/cpu/cpu4/core_ctl/busy_down_thres; echo 4 > /sys/devices/system/cpu/cpu4/core_ctl/task_thres; echo 80 > /sys/devices/system/cpu/cpu4/core_ctl/busy_up_thres; echo 100 > /sys/devices/system/cpu/cpu4/core_ctl/offline_delay_ms; echo 2 > /sys/devices/system/cpu/cpu0/core_ctl/min_cpus; echo 4 > /sys/devices/system/cpu/cpu0/core_ctl/max_cpus; echo 4 > /sys/devices/system/cpu/cpu0/core_ctl/task_thres; echo 80 > /sys/devices/system/cpu/cpu0/core_ctl/busy_up_thres; echo 100 > /sys/devices/system/cpu/cpu0/core_ctl/offline_delay_ms; echo 60 > /sys/devices/system/cpu/cpu0/core_ctl/busy_down_thres; chmod 444 /sys/devices/system/cpu/cpu[0-7]/max_cpus; pm disable com.google.android.gms/.chimera.GmsIntentOperationService`.replace(/\\n/g,\" \"),\r\n        inactive: `system_table_unset activity_manager_constants; pm enable com.google.android.gms/.chimera.GmsIntentOperationService`.replace(/\\n/g,\" \")\r\n    }}},\r\n    { id: \"swap_opt\", probePath: \"SWAP_STATE_MARKER\", marker: \"swapset_on\",\r\n      defaultState: true,\r\n      paths: {\r\n        \"/proc/sys/vm/dirty_ratio\": { active: \"35\", inactive: \"0\" },\r\n        \"/proc/sys/vm/dirty_background_ratio\": { active: \"10\", inactive: \"0\" },\r\n        \"/proc/sys/vm/dirty_expire_centisecs\": { active: \"50000\", inactive: \"200\" },\r\n        \"/proc/sys/vm/dirty_writeback_centisecs\": { active: \"20000\", inactive: \"500\" },\r\n        \"/proc/sys/vm/laptop_mode\": { active: \"5\", inactive: \"0\" },\r\n        \"/proc/sys/vm/swappiness\": { active: \"0\", inactive: \"100\" }\r\n    }},\r\n    { id: \"storage_opt\", probePath: \"STORAGE_STATE_MARKER\", marker: \"storageset_on\",\r\n      defaultState: true,\r\n      paths: {\r\n        \"/sys/block/sda/queue/rotational\": { active: \"1\", inactive: \"0\" },\r\n        \"/sys/block/sda/queue/add_random\": { active: \"1\", inactive: \"0\" },\r\n        \"/sys/block/sda/queue/rq_affinity\": { active: \"2\", inactive: \"1\" }\r\n    }},\r\n    // Freq Settings (Toggle/Popup)\r\n    { id: \"frq_on\", probePath: \"FRQ_STATE_MARKER\", marker: \"frqset_on\",\r\n      defaultState: true,\r\n      paths: {\r\n        \"/sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq\": { active: null, inactive: \"1794000\" },\r\n        \"/sys/devices/system/cpu/cpufreq/policy4/scaling_max_freq\": { active: null, inactive: \"2704000\" }\r\n    }},\r\n    // Voltage Settings (Toggle/Sliders)\r\n    { id: \"volt_on\", \r\n      probePath: \"VOLTAGE_STATE_MARKER\", \r\n      marker: \"voltset_on\",\r\n      defaultState: true,\r\n      paths: {\r\n        \"/sys/power/percent_margin/big_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/lit_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/g3d_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/mif_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/aud_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/cam_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/cp_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/disp_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/fsys0_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/int_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/intcam_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/iva_margin_percent\": { active: null, inactive: \"0\" },\r\n        \"/sys/power/percent_margin/score_margin_percent\": { active: null, inactive: \"0\" }\r\n      }},\r\n    // Labs (Toggles)\r\n    { id: \"kernel_debug\", probePath: \"DEBUG_STATE_MARKER\", marker: \"kerneldebug_on\",\r\n      defaultState: false,\r\n      paths: {\r\n        \"/proc/sys/kernel/panic\": { active: \"1\", inactive: \"0\" },\r\n        \"/sys/kernel/debug/debug_enabled\": { active: \"Y\", inactive: \"N\" },\r\n        \"/sys/kernel/debug/seclog/seclog_enabled\": { active: \"Y\", inactive: \"N\" }\r\n    }}\r\n  ];\r\n  toggles.forEach(cfg => initToggle(cfg));\r\n  // Freq Settings (Popup Menu)\r\n  (function initPopup() {\r\n    const popup = document.getElementById(\"popup-menu\");\r\n    if (!popup) return;\r\n    const popupContent = popup.querySelector(\".popup-content\");\r\n    const optionsList = document.getElementById(\"popup-options\");\r\n    let pointerDownOutside = false;\r\n    let popupOpen = false;\r\n    let optionsEnabled = true;\r\n    function disableOptionsTemporarily(ms = 300) {\r\n      optionsEnabled = false;\r\n      setTimeout(() => { optionsEnabled = true; }, ms);\r\n    }\r\n    document.addEventListener(\"pointerdown\", (e) => {\r\n      pointerDownOutside = !popup.contains(e.target);\r\n    }, true);\r\n    document.addEventListener(\"pointerup\", (e) => {\r\n      if (popupOpen && pointerDownOutside && !popup.contains(e.target)) {\r\n        closePopup();\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    }, true);\r\n    [\"click\",\"pointerdown\",\"pointerup\",\"touchstart\",\"touchend\"].forEach(evt => {\r\n      document.addEventListener(evt, (e) => {\r\n        if (popupOpen && !popup.contains(e.target)) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }\r\n      }, { capture: true, passive: false });\r\n    });\r\n    function closePopup() {\r\n      popup.classList.remove(\"show\");\r\n      popupOpen = false;\r\n      optionsEnabled = true;\r\n      document.querySelectorAll(\".popup-label-active\").forEach(el => el.classList.remove(\"popup-label-active\"));\r\n    }\r\n    [\"frq_little\",\"frq_big\"].forEach(id => {\r\n      const trigger = document.getElementById(id);\r\n      if (!trigger) return;\r\n      const defaults = {\r\n        frq_little: \"1690 Mhz\",\r\n        frq_big: \"1794 Mhz\"\r\n      };\r\n      let storedValue = localStorage.getItem(id) || defaults[id];\r\n      trigger.dataset.selected = storedValue;\r\n      let rightSpan = trigger.querySelector(\".popup-value\");\r\n      if (!rightSpan) {\r\n        rightSpan = document.createElement(\"span\");\r\n        rightSpan.className = \"popup-value\";\r\n        trigger.appendChild(rightSpan);\r\n      }\r\n      rightSpan.textContent = storedValue;\r\n      trigger.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n        if (trigger.classList.contains(\"popup-label-active\")) {\r\n          closePopup();\r\n          return;\r\n        }\r\n        document.querySelectorAll(\".popup-label-active\").forEach(el => el.classList.remove(\"popup-label-active\"));\r\n        trigger.classList.add(\"popup-label-active\");\r\n        disableOptionsTemporarily(300);\r\n        const options = JSON.parse(trigger.dataset.options);\r\n        const selected = trigger.dataset.selected;\r\n        const isOpen = popup.classList.contains(\"show\");\r\n        if (isOpen) {\r\n          positionPopup(trigger);\r\n          popupContent.classList.add(\"switching\");\r\n          setTimeout(() => {\r\n            fillPopup(options, selected, trigger);\r\n            popupContent.classList.remove(\"switching\");\r\n          }, 150);\r\n        } else {\r\n          fillPopup(options, selected, trigger);\r\n          requestAnimationFrame(() => {\r\n            positionPopup(trigger);\r\n            popup.classList.add(\"show\");\r\n            popupOpen = true;\r\n          });\r\n        }\r\n      });\r\n    });\r\n    function fillPopup(options, selected, trigger) {\r\n      optionsList.innerHTML = \"\";\r\n      options.forEach((opt,index) => {\r\n        const li = document.createElement(\"li\");\r\n        li.className = \"oui-bubble-item\";\r\n        let effectClass = \"\";\r\n        if (options.length === 1) effectClass = \"rounded-all\";\r\n        else if (index === 0) effectClass = \"rounded-top\";\r\n        else if (index === options.length-1) effectClass = \"rounded-bottom\";\r\n        li.innerHTML = `<div class=\"popup-inner\"><span class=\"popup-text\">${opt}</span></div><span class=\"popup-effect ${effectClass}\"></span>`;\r\n        if (opt === selected) {\r\n          li.classList.add(\"selected\");\r\n          const check = document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");\r\n          check.setAttribute(\"viewBox\",\"0 0 24 24\");\r\n          check.setAttribute(\"class\",\"popup-icon-selected checkmark\");\r\n          check.innerHTML = `<path style=\"fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:3\" d=\"m5 12 5 5 9-9\"/>`;\r\n          li.querySelector(\".popup-inner\").appendChild(check);\r\n        }\r\n        const optionInner = li.querySelector(\".popup-inner\");\r\n        const touchEffect = li.querySelector(\".popup-effect\");\r\n        let pointerDown = false;\r\n        let pointerInside = false;\r\n        let cancelled = false;\r\n        const cleanupEffect = () => {\r\n          if (touchEffect.classList.contains(\"animate-in\")) {\r\n            touchEffect.classList.remove(\"animate-in\");\r\n            touchEffect.classList.add(\"animate-out\");\r\n            const onAnimEnd = () => {\r\n              touchEffect.classList.remove(\"animate-out\");\r\n              touchEffect.removeEventListener(\"animationend\", onAnimEnd);\r\n            };\r\n            touchEffect.addEventListener(\"animationend\", onAnimEnd);\r\n          }\r\n          optionInner.classList.remove(\"pressed-effect\");\r\n        };\r\n        li.addEventListener(\"pointerdown\", (ev) => {\r\n          if (!optionsEnabled) { ev.stopPropagation(); return; }\r\n          pointerDown = true;\r\n          pointerInside = true;\r\n          cancelled = false;\r\n          optionInner.classList.add(\"pressed-effect\");\r\n          touchEffect.classList.add(\"animate-in\");\r\n          setTimeout(() => { if(!cancelled) cleanupEffect(); },400);\r\n        });\r\n        li.addEventListener(\"pointermove\",(ev)=>{\r\n          if(!pointerDown) return;\r\n          const rect = li.getBoundingClientRect();\r\n          pointerInside = ev.clientX >= rect.left && ev.clientX <= rect.right && ev.clientY >= rect.top && ev.clientY <= rect.bottom;\r\n          if(!pointerInside && !cancelled){ cancelled=true; pointerDown=false; cleanupEffect(); ev.preventDefault(); ev.stopPropagation(); }\r\n        });\r\n        li.addEventListener(\"pointerleave\",()=>{ if(pointerDown && !cancelled){ cancelled=true; pointerDown=false; cleanupEffect(); }});\r\n        li.addEventListener(\"pointerup\",()=>{ pointerDown=false; cleanupEffect(); });\r\n        li.addEventListener(\"pointercancel\",()=>{ pointerDown=false; cancelled=true; cleanupEffect(); });\r\n        li.addEventListener(\"click\",(e)=>{\r\n          if(!optionsEnabled) return;\r\n          e.stopPropagation();\r\n          popup.classList.remove(\"show\");\r\n          popupOpen=false;\r\n          optionsEnabled=true;\r\n          document.querySelectorAll(\".popup-label-active\").forEach(el=>el.classList.remove(\"popup-label-active\"));\r\n          trigger.dataset.selected=opt;\r\n          let valueSpan = trigger.querySelector(\".popup-value\");\r\n          if(!valueSpan){ valueSpan=document.createElement(\"span\"); valueSpan.className=\"popup-value\"; trigger.appendChild(valueSpan);}\r\n          valueSpan.textContent=opt;\r\n          localStorage.setItem(trigger.id, opt);\r\n          const path = trigger.id === \"frq_little\" ? \"/sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq\"\r\n                    : \"/sys/devices/system/cpu/cpufreq/policy4/scaling_max_freq\";\r\n          const val = opt.replace(\"Mhz\",\"\")*1000;\r\n          const markerLine = trigger.id === \"frq_little\" ? \"# lit=\" : \"# big=\";\r\n          const cmd = `echo '${val}' > ${path}; sed -i \"s|echo ['\\\\\\\"][^'\\\\\\\"]*['\\\\\\\"] > ${path}|echo '${val}' > ${path}|g\" ${serviceFile}; sed -i \"s|${markerLine}.*|${markerLine}${opt}|\" ${serviceFile}`;\r\n          scheduleIdle(()=>execSafe(cmd));\r\n        });\r\n        optionsList.appendChild(li);\r\n      });\r\n      let valueSpan = trigger.querySelector(\".popup-value\");\r\n      if(valueSpan) valueSpan.textContent=selected;\r\n    }\r\n    function positionPopup(trigger){\r\n      const rect=trigger.getBoundingClientRect();\r\n      const popupHeight=popup.offsetHeight;\r\n      const popupWidth=popup.offsetWidth;\r\n      const screenWidth=window.innerWidth;\r\n      const optionCount=JSON.parse(trigger.dataset.options).length;\r\n      const extraOffset=optionCount>10?40:0;\r\n      let top=rect.top+window.scrollY+(rect.height/2)-(popupHeight/2)-extraOffset-177;\r\n      let left=rect.right+8;\r\n      if(left+popupWidth>screenWidth) left=screenWidth-popupWidth-26;\r\n      popup.style.top=`${top}px`;\r\n      popup.style.left=`${left}px`;\r\n    }\r\n  })();\r\n  const voltageSliders = [\r\n    { id: \"volt_big\", path: \"/sys/power/percent_margin/big_margin_percent\", marker: \"big_volt\" },\r\n    { id: \"volt_little\", path: \"/sys/power/percent_margin/lit_margin_percent\", marker: \"lit_volt\" },\r\n    { id: \"volt_gpu\", path: \"/sys/power/percent_margin/g3d_margin_percent\", marker: \"g3d_volt\" },\r\n    { id: \"volt_mif\", path: \"/sys/power/percent_margin/mif_margin_percent\", marker: \"mif_volt\" },\r\n    { id: \"volt_audio\", path: \"/sys/power/percent_margin/aud_margin_percent\", marker: \"aud_volt\" },\r\n    { id: \"volt_camera\", path: \"/sys/power/percent_margin/cam_margin_percent\", marker: \"cam_volt\" },\r\n    { id: \"volt_cp\", path: \"/sys/power/percent_margin/cp_margin_percent\", marker: \"cp_volt\" },\r\n    { id: \"volt_display\", path: \"/sys/power/percent_margin/disp_margin_percent\", marker: \"disp_volt\" },\r\n    { id: \"volt_fsys\", path: \"/sys/power/percent_margin/fsys0_margin_percent\", marker: \"fsys0_volt\" },\r\n    { id: \"volt_int\", path: \"/sys/power/percent_margin/int_margin_percent\", marker: \"int_volt\" },\r\n    { id: \"volt_intcamera\", path: \"/sys/power/percent_margin/intcam_margin_percent\", marker: \"intcam_volt\" },\r\n    { id: \"volt_iva\", path: \"/sys/power/percent_margin/iva_margin_percent\", marker: \"iva_volt\" },\r\n    { id: \"volt_score\", path: \"/sys/power/percent_margin/score_margin_percent\", marker: \"score_volt\" }\r\n  ];\r\n  function sliderValueToVoltage(sliderValue) {\r\n    return Math.round(sliderValue) - 10;\r\n  }\r\n  function voltageToSliderValue(voltageValue) {\r\n    return Math.round(parseInt(voltageValue)) + 10;\r\n  }\r\n  voltageSliders.forEach(config => {\r\n    const slider = document.getElementById(config.id);\r\n    if (!slider) return;\r\n  const defaultVoltage = config.id === \"volt_cp\" ? 0 : -4;\r\n  const cacheKey = `voltage_${config.id}`;\r\n  let storedVoltage = localStorage.getItem(cacheKey);\r\n  if (storedVoltage === null) storedVoltage = defaultVoltage;\r\n  else storedVoltage = parseInt(storedVoltage);\r\n  slider.value = voltageToSliderValue(storedVoltage);\r\n  scheduleIdle(() => {\r\n    try {\r\n      const fallbackDefault = config.id === \"volt_cp\" ? 0 : -4; \r\n      execSafe(`grep -F \"# ${config.marker}=\" ${serviceFile} || echo \"# ${config.marker}=${fallbackDefault}\"`).then((markerLine) => {\r\n        const match = markerLine.match(new RegExp(`# ${config.marker}=(-?\\\\d+)`));\r\n        if (match) {\r\n          const currentVoltage = parseInt(match[1]);\r\n          slider.value = voltageToSliderValue(currentVoltage);\r\n          localStorage.setItem(cacheKey, currentVoltage);\r\n          const volToggle = document.getElementById(\"volt_on\");\r\n          if (volToggle && volToggle.checked) {\r\n            const cmd = `echo '${currentVoltage}' > ${config.path}; ` +\r\n                      buildSedReplace(config.path, currentVoltage);\r\n            scheduleIdle(() => execSafe(cmd));\r\n          }\r\n        }\r\n      });\r\n    } catch { /* ¯\\_(ツ)_/¯ */ }\r\n  });\r\n  let changeTimeout;\r\n  slider.addEventListener(\"input\", () => {\r\n    const sliderValue = Math.round(parseFloat(slider.value));\r\n    const voltageValue = sliderValueToVoltage(sliderValue);\r\n    localStorage.setItem(cacheKey, voltageValue);\r\n    clearTimeout(changeTimeout);\r\n    changeTimeout = setTimeout(() => {\r\n      const volToggle = document.getElementById(\"volt_on\");\r\n      const isEnabled = volToggle && volToggle.checked;\r\n      let cmd = \"\";\r\n      cmd += `sed -i \"s|# ${config.marker}=.*|# ${config.marker}=${voltageValue}|\" ${serviceFile}; `;\r\n      if (isEnabled) {\r\n        cmd += `echo '${voltageValue}' > ${config.path}; `;\r\n        cmd += buildSedReplace(config.path, voltageValue);\r\n      } else {\r\n        cmd += `echo '0' > ${config.path}; `;\r\n        cmd += buildSedReplace(config.path, \"0\");\r\n      }\r\n      scheduleIdle(() => execSafe(cmd));\r\n    }, 150);\r\n  });\r\n});\r\nconst originalVolToggle = document.getElementById(\"volt_on\");\r\nif (originalVolToggle) {\r\n  originalVolToggle.addEventListener(\"change\", () => {\r\n    const isEnabled = originalVolToggle.checked;\r\n    voltageSliders.forEach(config => {\r\n      const slider = document.getElementById(config.id);\r\n      if (!slider) return;\r\n      const sliderValue = Math.round(parseFloat(slider.value));\r\n      const voltageValue = sliderValueToVoltage(sliderValue);\r\n      const actualValue = isEnabled ? voltageValue : 0;\r\n      const cmd = `echo '${actualValue}' > ${config.path}; ` +\r\n                buildSedReplace(config.path, actualValue);\r\n      scheduleIdle(() => execSafe(cmd));\r\n    });\r\n  });\r\n}\r\n// LocalStorage Auto-Apply (Checker)\r\nlet isInitialLoadComplete = false;\r\nlet commandQueue = [];\r\nlet isProcessingCommands = false;\r\nconst processCommandQueue = async () => {\r\n  if (isProcessingCommands || commandQueue.length === 0) return;\r\n  isProcessingCommands = true;\r\n  while (commandQueue.length > 0) {\r\n    const command = commandQueue.shift();\r\n    try {\r\n      await execSafe(command);\r\n      await new Promise(resolve => setTimeout(resolve, 15));\r\n    } catch { /* ¯\\_(ツ)_/¯ */ }\r\n  }\r\n  isProcessingCommands = false;\r\n};\r\nconst queueCommand = (cmd) => {\r\n  commandQueue.push(cmd);\r\n  setTimeout(processCommandQueue, 0);\r\n};\r\nscheduleIdle(() => {\r\n  try {\r\n    const readServiceValue = async (marker) => {\r\n      try {\r\n        const result = await execSafe(\r\n          `grep -m1 \"^[#][[:space:]]*${marker}=\" ${serviceFile} | head -n1 | cut -d'=' -f2`\r\n        );\r\n        return result.trim();\r\n      } catch {\r\n        return null;\r\n      }\r\n    };\r\n    const compareFreqValues = (stored, serviceValue) => {\r\n      if (!stored || !serviceValue) return false;\r\n      const storedNumeric = Number(stored.replace(/\\s*Mhz\\s*/i, \"\"));\r\n      const serviceNumeric = Number(serviceValue.replace(/\\s*Mhz\\s*/i, \"\"));\r\n      return storedNumeric === serviceNumeric;\r\n    };\r\n    setTimeout(() => {\r\n      toggles.forEach(cfg => {\r\n        const id = cfg.id;\r\n        const cacheKey = `toggle_state_${id}`;\r\n        const el = document.getElementById(id);\r\n        if (!el) return;\r\n        let storedState;\r\n        if (localStorage.getItem(cacheKey) === null) {\r\n          const defaultState = cfg.defaultState !== undefined ? cfg.defaultState : true;\r\n          storedState = defaultState;\r\n          localStorage.setItem(cacheKey, defaultState ? \"1\" : \"0\");\r\n        } else {\r\n          storedState = localStorage.getItem(cacheKey) === \"1\";\r\n        }\r\n        el.checked = storedState;\r\n        const ev = new Event('change', { bubbles: true });\r\n        el.dispatchEvent(ev);\r\n      });\r\n    }, 0);\r\n    setTimeout(async () => {\r\n      for (const id of [\"frq_little\", \"frq_big\"]) {\r\n        const trigger = document.getElementById(id);\r\n        if (!trigger) continue;\r\n        const defaults = { frq_little: \"1690 Mhz\", frq_big: \"1794 Mhz\" };\r\n        const marker = id === \"frq_little\" ? \"lit\" : \"big\";\r\n        let storedValue;\r\n        if (localStorage.getItem(id) === null) {\r\n          storedValue = defaults[id];\r\n          localStorage.setItem(id, storedValue);\r\n        } else {\r\n          storedValue = localStorage.getItem(id);\r\n        }\r\n        trigger.dataset.selected = storedValue;\r\n        let rightSpan = trigger.querySelector(\".popup-value\");\r\n        if (!rightSpan) {\r\n          rightSpan = document.createElement(\"span\");\r\n          rightSpan.className = \"popup-value\";\r\n          trigger.appendChild(rightSpan);\r\n        }\r\n        rightSpan.textContent = storedValue;\r\n        setTimeout(async () => {\r\n          try {\r\n            const serviceValue = await readServiceValue(marker);\r\n            const needsUpdate = !compareFreqValues(storedValue, serviceValue);\r\n            if (needsUpdate) {\r\n              const path = id === \"frq_little\"\r\n                ? \"/sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq\"\r\n                : \"/sys/devices/system/cpu/cpufreq/policy4/scaling_max_freq\";\r\n              const freqToggle = document.getElementById(\"frq_on\");\r\n              const isFreqEnabled = freqToggle && freqToggle.checked;\r\n              const defaultValues = {\r\n                frq_little: 1794000,\r\n                frq_big: 2704000\r\n              };\r\n              let actualValue;\r\n              if (isFreqEnabled) {\r\n                const numeric = Number(storedValue.replace(/\\s*Mhz\\s*/i, \"\"));\r\n                actualValue = numeric * 1000;\r\n              } else {\r\n                actualValue = defaultValues[id];\r\n              }\r\n              const markerLine = id === \"frq_little\" ? \"# lit=\" : \"# big=\";\r\n              const cmd = `sed -i \"s|${markerLine}.*|${markerLine}${storedValue}|\" ${serviceFile}; ` +\r\n                        `echo '${actualValue}' > ${path}; ` +\r\n                        buildSedReplace(path, actualValue);\r\n              queueCommand(cmd);\r\n            }\r\n          } catch { /* ¯\\_(ツ)_/¯ */ }\r\n        }, id === \"frq_little\" ? 120 : 200); \r\n      }\r\n    }, 50); \r\n    setTimeout(async () => {\r\n      for (let i = 0; i < voltageSliders.length; i++) {\r\n        const config = voltageSliders[i];\r\n        setTimeout(async () => {\r\n          try {\r\n            const cacheKey = `voltage_${config.id}`;\r\n            const slider = document.getElementById(config.id);\r\n            if (!slider) return;\r\n            let storedVoltage;\r\n            if (localStorage.getItem(cacheKey) === null) {\r\n              const fallbackDefault = config.id === \"volt_cp\" ? 0 : -4;\r\n              storedVoltage = fallbackDefault;\r\n              localStorage.setItem(cacheKey, String(storedVoltage));\r\n            } else {\r\n              storedVoltage = Number(localStorage.getItem(cacheKey));\r\n            }    \r\n            slider.value = voltageToSliderValue(storedVoltage);\r\n            const serviceValue = await readServiceValue(config.marker);\r\n            const needsUpdate = serviceValue === null || Number(serviceValue) !== storedVoltage;\r\n            if (needsUpdate) {\r\n              const volToggle = document.getElementById(\"volt_on\");\r\n              const isEnabled = volToggle ? volToggle.checked : false;\r\n              const actualValue = isEnabled ? storedVoltage : 0;\r\n              const cmd = `\r\n                if grep -m1 -q \"^[#][[:space:]]*${config.marker}=\" \"${serviceFile}\"; then\r\n                  sed -i 's|^[#][[:space:]]*${config.marker}=.*|# ${config.marker}=${storedVoltage}|' \"${serviceFile}\";\r\n                else\r\n                  printf \"# ${config.marker}=%s\\\\n\" \"${storedVoltage}\" >> \"${serviceFile}\";\r\n                fi\r\n                echo '${actualValue}' > ${config.path};\r\n                ${buildSedReplace(config.path, actualValue)}\r\n              `.trim();\r\n              queueCommand(cmd);\r\n            }\r\n          } catch { /* ¯\\_(ツ)_/¯ */ }\r\n        }, i * 80); \r\n      }\r\n      setTimeout(() => {\r\n        isInitialLoadComplete = true;\r\n      }, voltageSliders.length * 80 + 450); \r\n    }, 250);\r\n  } catch {\r\n    setTimeout(() => {\r\n      isInitialLoadComplete = true;\r\n    }, 350);\r\n  }\r\n});\r\nwindow.isInitialLoadComplete = () => isInitialLoadComplete;\r\n});\r\n"],"names":["document","addEventListener","serviceFile","execSafe","cmd","ksu","exec","catch","buildSedReplace","path","value","scheduleIdle","fn","window","requestIdleCallback","setTimeout","toggles","id","probePath","marker","defaultState","paths","active","inactive","replace","forEach","cfg","initToggle","toggle","getElementById","container","closest","classList","add","probe","Object","keys","activeProbeVal","inactiveProbeVal","cacheKey","initialState","cached","localStorage","getItem","checked","requestAnimationFrame","remove","then","svcLine","liveState","includes","setItem","length","p","val","name","svc","hasActive","hasInactive","live","trim","shouldBe","e","state","tmpBlockPath","tmpService","activeBlock","inactiveBlock","popup","popupContent","querySelector","optionsList","pointerDownOutside","popupOpen","optionsEnabled","closePopup","querySelectorAll","el","fillPopup","options","selected","trigger","innerHTML","opt","index","li","createElement","className","effectClass","check","createElementNS","setAttribute","appendChild","optionInner","touchEffect","pointerDown","cancelled","cleanupEffect","contains","onAnimEnd","removeEventListener","ev","stopPropagation","rect","getBoundingClientRect","clientX","left","right","clientY","top","bottom","preventDefault","dataset","valueSpan","textContent","markerLine","positionPopup","popupHeight","offsetHeight","popupWidth","offsetWidth","screenWidth","innerWidth","optionCount","JSON","parse","scrollY","height","style","target","evt","capture","passive","storedValue","defaults","frq_little","frq_big","rightSpan","disableOptionsTemporarily","ms","voltageSliders","sliderValueToVoltage","sliderValue","Math","round","voltageToSliderValue","voltageValue","parseInt","config","changeTimeout","slider","defaultVoltage","storedVoltage","fallbackDefault","match","RegExp","currentVoltage","volToggle","parseFloat","clearTimeout","isEnabled","originalVolToggle","actualValue","isInitialLoadComplete","commandQueue","isProcessingCommands","processCommandQueue","command","shift","Promise","resolve","queueCommand","push","readServiceValue","result","compareFreqValues","stored","serviceValue","storedNumeric","Number","serviceNumeric","storedState","undefined","Event","bubbles","dispatchEvent","freqToggle","isFreqEnabled","defaultValues","numeric","i","String"],"version":3,"file":"webroot.08566efa.js.map"}